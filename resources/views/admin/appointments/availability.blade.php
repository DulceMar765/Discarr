{{-- resources/views/admin/appointments/availability.blade.php --}}\n\n<div class=\"admin-section\">\n    <h2 class=\"mb-4\"><i class=\"bi bi-calendar-week me-2\"></i> Gestión de Disponibilidad</h2>\n\n    @if (session('success'))\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            {{ session('success') }}\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n    @endif\n\n    <div class=\"row\">\n        <div class=\"col-md-7\">\n            <div class=\"card shadow-sm mb-4\">\n                <div class=\"card-header bg-primary text-white\">\n                    <h5 class=\"mb-0\">Calendario de Disponibilidad</h5>\n                </div>\n                <div class=\"card-body\">\n                    <div id=\"availability-calendar\"></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-md-5\">\n            <div class=\"card shadow-sm mb-4\">\n                <div class=\"card-header bg-primary text-white\">\n                    <h5 class=\"mb-0\">Configurar Disponibilidad</h5>\n                </div>\n                <div class=\"card-body\">\n                    <form id=\"availabilityForm\">\n                        @csrf\n                        <input type=\"hidden\" id=\"selected_date\" name=\"date\">\n                        \n                        <div class=\"mb-3\">\n                            <label class=\"form-label\">Fecha seleccionada:</label>\n                            <div id=\"selected_date_display\" class=\"form-control bg-light\">Selecciona una fecha en el calendario</div>\n                        </div>\n                        \n                        <div class=\"mb-3\">\n                            <label for=\"day_status\" class=\"form-label\">Estado del día:</label>\n                            <select id=\"day_status\" name=\"day_status\" class=\"form-select\">\n                                <option value=\"available\">Disponible para citas</option>\n                                <option value=\"unavailable\">No disponible</option>\n                                <option value=\"holiday\">Día festivo/sin servicio</option>\n                            </select>\n                        </div>\n                        \n                        <div id=\"slots_container\">\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Horarios disponibles:</label>\n                                <div class=\"d-flex align-items-center mb-2\">\n                                    <button type=\"button\" id=\"add_slot_btn\" class=\"btn btn-sm btn-outline-primary me-2\">\n                                        <i class=\"bi bi-plus-circle\"></i> Agregar horario\n                                    </button>\n                                    <span class=\"text-muted small\">Formato 24h (ej: 14:30)</span>\n                                </div>\n                                \n                                <div id=\"time_slots_list\" class=\"list-group mb-3\">\n                                    <!-- Los horarios se agregarán dinámicamente aquí -->\n                                </div>\n                            </div>\n                            \n                            <div class=\"mb-3\">\n                                <label for=\"max_appointments\" class=\"form-label\">Citas máximas por horario:</label>\n                                <input type=\"number\" id=\"max_appointments\" name=\"max_appointments\" class=\"form-control\" min=\"1\" value=\"1\">\n                            </div>\n                        </div>\n                        \n                        <div class=\"d-grid gap-2\">\n                            <button type=\"submit\" id=\"save_btn\" class=\"btn btn-primary\" disabled>\n                                <i class=\"bi bi-save\"></i> Guardar Configuración\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            \n            <div class=\"card shadow-sm\">\n                <div class=\"card-header bg-info text-white\">\n                    <h5 class=\"mb-0\">Leyenda</h5>\n                </div>\n                <div class=\"card-body p-0\">\n                    <table class=\"table table-sm mb-0\">\n                        <tbody>\n                            <tr><td style=\"width: 30px; background-color: #28a745;\"></td><td>Alta disponibilidad</td></tr>\n                            <tr><td style=\"background-color: #ffc107;\"></td><td>Poca disponibilidad</td></tr>\n                            <tr><td style=\"background-color: #dc3545;\"></td><td>Sin disponibilidad</td></tr>\n                            <tr><td style=\"background-color: #b39ddb;\"></td><td>Día sin servicio</td></tr>\n                            <tr><td style=\"background-color: #adb5bd;\"></td><td>Día no configurado</td></tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    document.addEventListener('DOMContentLoaded', function() {\n        // Inicializar el calendario\n        const calendarEl = document.getElementById('availability-calendar');\n        const calendar = new FullCalendar.Calendar(calendarEl, {\n            initialView: 'dayGridMonth',\n            headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek'\n            },\n            locale: 'es',\n            selectable: true,\n            select: function(info) {\n                selectDate(info.startStr);\n            },\n            eventClick: function(info) {\n                selectDate(info.event.startStr.split('T')[0]);\n            },\n            events: '/admin/appointments/calendar-data',\n            eventContent: function(arg) {\n                return { html: `<div class=\"fc-event-title\">${arg.event.title}</div>` };\n            }\n        });\n        calendar.render();\n        \n        // Variables y elementos del DOM\n        const selectedDateInput = document.getElementById('selected_date');\n        const selectedDateDisplay = document.getElementById('selected_date_display');\n        const dayStatusSelect = document.getElementById('day_status');\n        const slotsContainer = document.getElementById('slots_container');\n        const addSlotBtn = document.getElementById('add_slot_btn');\n        const timeSlotsList = document.getElementById('time_slots_list');\n        const saveBtn = document.getElementById('save_btn');\n        const availabilityForm = document.getElementById('availabilityForm');\n        \n        // Función para seleccionar una fecha\n        function selectDate(date) {\n            selectedDateInput.value = date;\n            const formattedDate = new Date(date).toLocaleDateString('es-ES', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            });\n            selectedDateDisplay.textContent = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n            saveBtn.disabled = false;\n            \n            // Cargar datos existentes para esta fecha\n            fetch(`/admin/appointments/day-config/${date}`)\n                .then(response => response.json())\n                .then(data => {\n                    // Establecer el estado del día\n                    dayStatusSelect.value = data.status || 'available';\n                    \n                    // Mostrar/ocultar sección de horarios según el estado\n                    slotsContainer.style.display = data.status === 'available' ? 'block' : 'none';\n                    \n                    // Establecer citas máximas\n                    document.getElementById('max_appointments').value = data.max_appointments || 1;\n                    \n                    // Limpiar y agregar horarios\n                    timeSlotsList.innerHTML = '';\n                    if (data.slots && data.slots.length > 0) {\n                        data.slots.forEach(slot => addTimeSlot(slot));\n                    } else {\n                        // Agregar algunos horarios predeterminados si no hay ninguno\n                        addTimeSlot('09:00');\n                        addTimeSlot('11:00');\n                        addTimeSlot('13:00');\n                    }\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                    // Valores predeterminados en caso de error\n                    dayStatusSelect.value = 'available';\n                    slotsContainer.style.display = 'block';\n                    timeSlotsList.innerHTML = '';\n                    addTimeSlot('09:00');\n                    addTimeSlot('11:00');\n                    addTimeSlot('13:00');\n                });\n        }\n        \n        // Cambiar visibilidad de horarios según el estado del día\n        dayStatusSelect.addEventListener('change', function() {\n            slotsContainer.style.display = this.value === 'available' ? 'block' : 'none';\n        });\n        \n        // Función para agregar un nuevo horario\n        function addTimeSlot(value = '') {\n            const slotItem = document.createElement('div');\n            slotItem.className = 'input-group mb-2';\n            slotItem.innerHTML = `\n                <input type=\"time\" class=\"form-control time-slot-input\" value=\"${value}\" required>\n                <button type=\"button\" class=\"btn btn-outline-danger remove-slot-btn\">\n                    <i class=\"bi bi-trash\"></i>\n                </button>\n            `;\n            timeSlotsList.appendChild(slotItem);\n            \n            // Agregar evento para eliminar el horario\n            slotItem.querySelector('.remove-slot-btn').addEventListener('click', function() {\n                slotItem.remove();\n            });\n        }\n        \n        // Evento para agregar un nuevo horario\n        addSlotBtn.addEventListener('click', function() {\n            addTimeSlot();\n        });\n        \n        // Manejar envío del formulario\n        availabilityForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            // Recopilar todos los horarios\n            const timeSlots = [];\n            document.querySelectorAll('.time-slot-input').forEach(input => {\n                if (input.value) {\n                    timeSlots.push(input.value);\n                }\n            });\n            \n            // Crear objeto de datos\n            const formData = {\n                date: selectedDateInput.value,\n                status: dayStatusSelect.value,\n                max_appointments: document.getElementById('max_appointments').value,\n                slots: timeSlots\n            };\n            \n            // Enviar datos al servidor\n            fetch('/admin/appointments/save-availability', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'),\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    // Mostrar mensaje de éxito\n                    alert('Configuración guardada correctamente');\n                    // Recargar el calendario\n                    calendar.refetchEvents();\n                } else {\n                    alert('Error: ' + (data.message || 'No se pudo guardar la configuración'));\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('Error al procesar la solicitud');\n            });\n        });\n    });\n</script>
